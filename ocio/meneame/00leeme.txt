 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
hace varios dias que en el ustart no va el meneame
asi que hoy me pongo a verlo
 
parece que el propio meneame si que va bien, la url van
https://www.meneame.net/rss
 
intento hacer rutina para parsealo y que se vea un poco mejor
me cuesta la vida misma
 
  
 
la 1' dificultad fue que libreria usar
aqui usaban saxon 11 he
https://programminghistorian.org/es/lecciones/transformacion-datos-xml-xsl
 
a dia de hoy es de pago, dan 30 dias de prueba
 
  
 
la siguiente dificultad es el xsl
este me funciona
https://community.claris.com/en/s/question/0D53w00005wrwWZCAY/parsing-xml
 
  
 
al bajar con el wget, no me dejaba, asi que hice rutinita java para bajar el xml
 
al trincar el xml con java, se recorta el xml, hay que modificarlo para que este bien formado
se recorta el ultimo item 
y se añade 
 
</channel>
</rss>
 
  
 
despues se parsea con el saxon
 
  
 
tambien hay que cambiar los caracteres html :
 
&lt;          ( < )
&gt;          ( > )
nbsp;         (   )
#187;         (   ) ( comillas anguladas de cierre ) ( » )
&amp;         ( & )
     
 
y por ultimo lo meto todo en un bat : 
 
C:\manu\git\zmanu25\ocio\meneame
 
java Wget.java
java -jar saxon9he.jar -xsl:manu24.xsl -s:xml-meneame.html -o:salida.html
java SustituirChars.java
 
  
 
  
 
  
 
despues de otro buen rato intentando arreglarlo
el problema era que no estaba cerrando el printWriter
 
      pw.close();
 
como no se cerraba, siempre se cortaban las ultimas lineas
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
//package util.net;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.HttpURLConnection;
import java.net.URL;

public class Wget {
      
      /*


fusilado de :
https://www.digitalocean.com/community/tutorials/java-httpurlconnection-example-java-http-request-get-post


       */

      
      private static final String USER_AGENT = "Mozilla/5.0";

//    private static final String GET_URL = "https://localhost:9090/SpringMVCExample";
//    private static final String GET_URL = "https://google.com";
      private static final String GET_URL = " https://www.meneame.net/rss";

      private static final String nficheror2 = "c:\\manu\\git\\zmanu25\\ocio\\meneame\\xml-meneame.html";
//    private static final String POST_URL = "https://localhost:9090/SpringMVCExample/home";
//    private static final String POST_URL = "https://google.com";

      private static final String POST_PARAMS = "userName=Pankaj";

      public static void main(String[] args) throws IOException {
            sendGET();
            System.out.println("GET DONE");
      }

      private static void sendGET() throws IOException {
            

            

            BufferedReader br = null;

            br = new BufferedReader(new InputStreamReader(new FileInputStream(nficheror2), "utf-8"));

            FileWriter fichero = null;

            fichero = new FileWriter(nficheror2);
            PrintWriter pw = null;
            pw = new PrintWriter(fichero);
            
            
            
            
            URL obj = new URL(GET_URL);
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setRequestMethod("GET");
            con.setRequestProperty("User-Agent", USER_AGENT);
            int responseCode = con.getResponseCode();
            System.out.println("GET Response Code :: " + responseCode);
            if (responseCode == HttpURLConnection.HTTP_OK) { // success
                  BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
                  String inputLine;
                  StringBuffer response = new StringBuffer();

                  while ((inputLine = in.readLine()) != null) {
                        response.append(inputLine);
                        pw.println(inputLine);
                  }
                  in.close();
                  pw.close();

                  // print result
//                System.out.println(response.toString());
            } else {
                  System.out.println("GET request did not work.");
            }

      }


}
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Vector;

public class SustituirChars {
      public SustituirChars() {
            super();
      }

      /*
       * Este programita me lo hice para cambiar los caracteres html de las urls.
       * 
           uso 3 ficheros, uno de entrada, otro de salida y otro con el diccionario de los caracteres:
           
           
           
&lt;          ( < )
&gt;          ( > )
nbsp;         (   )
#187;         (   ) ( comillas anguladas de cierre ) ( » )
&amp;         ( & )

     
     
     
           el fichero de diccionario, tiene que tener este formato ( los codigos uno detras de otro y despues los caracteres ) :
           
           
&lt;
&gt;
nbsp;
#187;
&amp;
<
>
 
 
&




    */
      public static void main(String[] args) {
            String nficheror1 = "c:\\manu\\git\\zmanu25\\ocio\\meneame\\salida.html";
            String nficheror2 = "c:\\manu\\git\\zmanu25\\ocio\\meneame\\00salida2.html";
            String nficheror3 = "c:\\manu\\git\\zmanu25\\ocio\\meneame\\lista-cambios-caracteres.txt";
            String linea = "";
            BufferedReader br = null;
            BufferedReader dicc = null;
            FileWriter fichero = null;
            PrintWriter pw = null;
            int longi = 0;
            int lineas = 0;
            int lineas2 = 0;
            HashMap<Integer, String> lista = new HashMap<Integer, String>();
            HashMap<String, String> hdicc = new HashMap<String, String>();
            Vector<String> faltan = new Vector<String>();
            String caracterEscape = "%";
            try {
                  dicc = new BufferedReader(new InputStreamReader(new FileInputStream(nficheror3), "utf-8"));
                  fichero = new FileWriter(nficheror2);
                  pw = new PrintWriter(fichero);
                  // cuento las lineas del diccionario:
                  while ((linea = dicc.readLine()) != null) {
                        longi++;
                  }
                  // meto el diccionario en una hashtable
                  dicc = new BufferedReader(new InputStreamReader(new FileInputStream(nficheror3), "utf-8"));
                  while ((linea = dicc.readLine()) != null) {
                        if (lineas < longi / 2) {
                              lista.put(lineas, linea);
                        } else {
                              hdicc.put(lista.get(lineas2), linea);
                              lineas2++;
                        }
                        lineas++;
                  }
                  // ahora hago las sustituiciones de los caracteres usando el diccionario
                  br = new BufferedReader(new InputStreamReader(new FileInputStream(nficheror1), "utf-8"));
                  linea = br.readLine();
                  String lineaok1 = linea;
                  String lineatemp2 = linea;
                  while (linea != null) {
                        for (int i = 0; i < longi / 2; i++) {
                              String Sbusq = lista.get(i);
                              int Sbusql = Sbusq.length();
                              int busq = lineaok1.indexOf(Sbusq);
//                            if (busq == -1) {
//                                  lineaok1 = linea;
//                            }
                              while (busq != -1) {
                                    lineaok1 = lineaok1.substring(0, busq) + hdicc.get(Sbusq) + lineaok1.substring(busq + Sbusql);
                                    busq = lineaok1.indexOf(Sbusq);
                              }
                        }
                        pw.println(lineaok1);
                        linea = br.readLine();
                        lineatemp2 = linea;
                        lineaok1 = linea;
                  }
                  if (faltan.size() > 0) {
                        System.out.println(" \n ************ \nProcesando el fichero, se han encontrado " + faltan.size()
                                    + " codigos que no estaban en el diccionario :  ");
                        for (int i = 0; i < faltan.size(); i++) {
                              System.out.println(" - " + faltan.get(i));
                        }
                        System.out.println(" ************ \n  ");
                  }
            } catch (Exception e) {
            } finally {
                  try {
                        if (null != fichero)
                              fichero.close();
                        else
                              System.out.println(" xxx Error al cerrar el fichero. ");
                  } catch (Exception e2) {
                        System.out.println(" xxx Error al cerrar el fichero. ");
                        e2.printStackTrace();
                  }
            }
      }
}